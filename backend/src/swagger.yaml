openapi: 3.0.0
info:
  title: Studypot API
  description: 스터디그룹 관리 시스템 API 문서
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/signup:
    post:
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignup"
      responses:
        "201":
          description: 회원가입 성공
        "400":
          description: 요청 형식 오류

  /auth/login:
    post:
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        "401":
          description: 인증 실패
  /studies:
    post:
      summary: 스터디 생성
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudyCreate"
      responses:
        "201":
          description: 스터디 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Study"
        "400":
          description: 요청 형식 오류
        "401":
          description: 인증 실패

    get:
      summary: 스터디 목록 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 스터디 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Study"
        "401":
          description: 인증 실패

  /studies/{id}:
    get:
      summary: 스터디 상세 조회
      description: 스터디 ID를 기반으로 상세 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 조회할 스터디 ID
      responses:
        "200":
          description: 스터디 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Study"
        "404":
          description: 스터디를 찾을 수 없음
        "401":
          description: 인증 실패

    patch:
      summary: 스터디 수정
      description: 스터디 ID에 해당하는 정보를 수정합니다. 일부 필드만 수정해도 됩니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 수정할 스터디 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudyUpdate"
      responses:
        "200":
          description: 스터디 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Study"
        "404":
          description: 스터디를 찾을 수 없음
        "401":
          description: 인증 실패

    delete:
      summary: 스터디 삭제
      description: 특정 ID에 해당하는 스터디를 삭제합니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 삭제할 스터디 ID
      responses:
        "204":
          description: 스터디 삭제 성공 (응답 본문 없음)
        "404":
          description: 스터디를 찾을 수 없음
        "401":
          description: 인증 실패 (토큰 누락/만료 등)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserSignup:
      type: object
      required:
        - email
        - password
        - nickname
      properties:
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: securePassword123
        name:
          type: string
          example: studypotuser

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: securePassword123

    StudyCreate:
      type: object
      required:
        - title
        - description
        - location
        - startDate
        - endDate
      properties:
        title:
          type: string
          example: "프로그래밍 스터디"
        description:
          type: string
          example: "자바스크립트 기반 백엔드 개발 공부"
        location:
          type: string
          example: "서울 강남구"
        startDate:
          type: string
          format: date
          example: "2025-07-10"
        endDate:
          type: string
          format: date
          example: "2025-12-31"

    Study:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "프로그래밍 스터디"
        description:
          type: string
          example: "자바스크립트 기반 백엔드 개발 공부"
        location:
          type: string
          example: "서울 강남구"
        startDate:
          type: string
          format: date
          example: "2025-07-10"
        endDate:
          type: string
          format: date
          example: "2025-12-31"
        hostId:
          type: integer
          example: 123
        createdAt:
          type: string
          format: date-time
          example: "2025-07-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-07-01T12:00:00Z"

    StudyUpdate:
      type: object
      properties:
        title:
          type: string
          example: "수정된 스터디 제목"
        description:
          type: string
          example: "수정된 스터디 설명"
        location:
          type: string
          example: "서울 강서구"
        startDate:
          type: string
          format: date
          example: "2025-08-01"
        endDate:
          type: string
          format: date
          example: "2025-12-31"
