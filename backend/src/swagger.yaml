openapi: 3.0.0
info:
  title: Studypot API
  description: 스터디그룹 관리 시스템 API 문서
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignup"
      responses:
        "201":
          description: 회원가입 성공
        "400":
          description: 요청 형식 오류
        "409":
          description: 이메일 중복

  /auth/login:
    post:
      tags:
        - Auth
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
        "401":
          description: 인증 실패 - 이메일 또는 비밀번호 불일치
        "500":
          description: 서버 내부 오류
  /studies:
    post:
      tags:
        - Study
      summary: 스터디 생성
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudyCreate"
      responses:
        "201":
          description: 스터디 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Study"
        "400":
          description: 요청 형식 오류
        "401":
          description: 인증 실패

    get:
      tags:
        - Study
      summary: 스터디 목록 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 스터디 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Study"
        "401":
          description: 인증 실패

  /studies/{id}:
    get:
      tags:
        - Study
      summary: 스터디 상세 조회
      description: 스터디 ID를 기반으로 상세 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 조회할 스터디 ID
      responses:
        "200":
          description: 스터디 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Study"
        "404":
          description: 스터디를 찾을 수 없음
        "401":
          description: 인증 실패

    patch:
      tags:
        - Study
      summary: 스터디 수정
      description: 스터디 ID에 해당하는 정보를 수정합니다. 일부 필드만 수정해도 됩니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 수정할 스터디 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudyUpdate"
      responses:
        "200":
          description: 스터디 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  data:
                    $ref: "#/components/schemas/Study"
        "403":
          description: 권한 없음 (작성자만 수정 가능)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 수정 권한이 없습니다.
        "404":
          description: 스터디를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 스터디를 찾을 수 없습니다.
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 스터디 수정 중 오류 발생

    delete:
      tags:
        - Study
      summary: 스터디 삭제
      description: 특정 ID에 해당하는 스터디를 삭제합니다.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 삭제할 스터디 ID
      responses:
        "204":
          description: 스터디 삭제 성공 (응답 본문 없음)
        "401":
          description: 인증 실패 (토큰 누락/만료 등)
        "403":
          description: 권한 없음 (작성자만 삭제 가능)
        "404":
          description: 스터디를 찾을 수 없음
        "500":
          description: 서버 오류

  /studies/{studyId}/join:
    post:
      tags:
        - JoinRequest
      summary: 스터디 참여 신청
      description: 로그인한 사용자가 특정 스터디에 참여 신청을 보냅니다.
      security:
        - bearerAuth: []
      parameters:
        - name: studyId
          in: path
          required: true
          schema:
            type: integer
          description: 참여 신청할 스터디의 ID
      responses:
        "201":
          description: 참여 신청 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  joinRequest:
                    $ref: "#/components/schemas/JoinRequest"
        "404":
          description: 스터디가 존재하지 않음
        "409":
          description: 이미 신청한 경우

  /users/{userId}/join-requests:
    get:
      tags:
        - JoinRequest
      summary: 내가 신청한 스터디 목록 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 나의 신청 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JoinRequest"
        "401":
          description: 인증 실패 - 로그인 필요
        "403":
          description: 다른 사용자의 신청 목록 요청 시 권한 없음

  /studies/{studyId}/join-requests:
    get:
      tags:
        - JoinRequest
      summary: 특정 스터디에 대한 참여 신청 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: studyId
          in: path
          required: true
          schema:
            type: integer
          description: 참여 신청을 조회할 스터디 ID
      responses:
        "200":
          description: 참여 신청 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  requests:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        userId:
                          type: integer
                          example: 3
                        studyId:
                          type: integer
                          example: 5
                        status:
                          type: string
                          enum: [pending, approved, rejected]
                          example: pending
                        appliedAt:
                          type: string
                          format: date-time
                          example: "2025-07-03T12:34:56.000Z"
        "403":
          description: 호스트 권한 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 해당 스터디에 대한 권한이 없습니다.
        "404":
          description: 스터디가 존재하지 않음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 스터디가 존재하지 않습니다.

  /studies/{studyId}/join-requests/{requestId}:
    patch:
      tags:
        - JoinRequest
      summary: 호스트가 참여 신청 수락/거절
      security:
        - bearerAuth: []
      parameters:
        - name: studyId
          in: path
          required: true
          schema:
            type: integer
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JoinRequest"
      responses:
        "200":
          description: 상태 변경 완료
        "403":
          description: 권한 없음
        "400":
          description: 잘못된 상태 값
        "404":
          description: 신청 또는 스터디가 존재하지 않음

  /studies/{id}/like:
    post:
      tags:
        - Likes
      summary: 스터디 좋아요 등록
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 좋아요를 누를 스터디 ID
      responses:
        201:
          description: 좋아요 등록 성공
        401:
          description: 인증 실패 (로그인 필요)
        404:
          description: 스터디가 존재하지 않음
        409:
          description: 이미 좋아요를 누름
    delete:
      tags:
        - Likes
      summary: 스터디 좋아요 취소
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 좋아요를 취소할 스터디 ID
      responses:
        204:
          description: 좋아요 취소 성공 (No Content)
        401:
          description: 인증 실패
        404:
          description: 좋아요 기록 없음

  /studies/{id}/likes:
    get:
      tags:
        - Likes
      summary: 특정 스터디의 좋아요 수 조회
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 좋아요 수를 조회할 스터디 ID
      responses:
        200:
          description: 좋아요 수 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  likeCount:
                    type: integer
        404:
          description: 스터디가 존재하지 않음

  /users/{id}/likes:
    get:
      tags:
        - Likes
      summary: 사용자가 좋아요 누른 스터디 목록 조회
      security:
        - bearerAuth: []
      responses:
        200:
          description: 좋아요한 스터디 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Study"
        401:
          description: 인증 실패

  /studies/{studyId}/comments:
    post:
      tags:
        - Comment
      summary: 댓글 작성
      description: 스터디에 댓글을 작성합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: studyId
          in: path
          required: true
          schema:
            type: integer
          description: 댓글을 작성할 스터디 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "좋은 스터디네요!"
      responses:
        "201":
          description: 댓글 작성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"

    get:
      tags:
        - Comment
      summary: 댓글 목록 조회
      description: 특정 스터디에 작성된 댓글들을 조회합니다.
      parameters:
        - name: studyId
          in: path
          required: true
          schema:
            type: integer
          description: 스터디 ID
      responses:
        "200":
          description: 댓글 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ok
                  commentsList:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"

  /comments/{commentId}:
    patch:
      tags:
        - Comment
      summary: 댓글 수정
      description: 사용자가 작성한 댓글을 수정합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "수정된 댓글입니다."
      responses:
        "200":
          description: 댓글 수정 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"

    delete:
      tags:
        - Comment
      summary: 댓글 삭제
      description: 사용자가 작성한 댓글을 삭제합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: 댓글 삭제 성공 (내용 없음)
        "403":
          description: 권한 없음
        "404":
          description: 댓글이 존재하지 않음

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserSignup:
      type: object
      required:
        - email
        - password
        - nickname
      properties:
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: securePassword123
        name:
          type: string
          example: studypotuser

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: test@example.com
        password:
          type: string
          example: securePassword123

    StudyCreate:
      type: object
      required:
        - title
        - description
        - location
        - startDate
        - endDate
      properties:
        title:
          type: string
          example: "프로그래밍 스터디"
        description:
          type: string
          example: "자바스크립트 기반 백엔드 개발 공부"
        location:
          type: string
          example: "서울 강남구"
        startDate:
          type: string
          format: date
          example: "2025-07-10"
        endDate:
          type: string
          format: date
          example: "2025-12-31"

    Study:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "프로그래밍 스터디"
        description:
          type: string
          example: "자바스크립트 기반 백엔드 개발 공부"
        location:
          type: string
          example: "서울 강남구"
        startDate:
          type: string
          format: date
          example: "2025-07-10"
        endDate:
          type: string
          format: date
          example: "2025-12-31"
        hostId:
          type: integer
          example: 123
        createdAt:
          type: string
          format: date-time
          example: "2025-07-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-07-01T12:00:00Z"
        likeCount:
          type: integer
          example: 3

    StudyUpdate:
      type: object
      properties:
        title:
          type: string
          example: "수정된 스터디 제목"
        description:
          type: string
          example: "수정된 스터디 설명"
        location:
          type: string
          example: "서울 강서구"
        startDate:
          type: string
          format: date
          example: "2025-08-01"
        endDate:
          type: string
          format: date
          example: "2025-12-31"

    JoinRequest:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        studyId:
          type: integer
        status:
          type: string
          enum: [pending, approved, rejected]
          description: "신청 상태값 (pending: 대기, approved: 승인됨, rejected: 거절됨)"
        appliedAt:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        content:
          type: string
          example: "좋은 스터디입니다!"
        studyId:
          type: integer
          example: 5
        userId:
          type: integer
          example: 3
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
